(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{102:function(e,t,a){"use strict";var n=a(0),i=a(103);t.a=function(){const e=Object(n.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},103:function(e,t,a){"use strict";var n=a(0);const i=Object(n.createContext)(void 0);t.a=i},106:function(e,t,a){"use strict";var n=a(0),i=a.n(n),o=a(102),l=a(99),c=a(53),r=a.n(c);const s=37,p=39;t.a=function(e){const{lazy:t,block:a,children:c,defaultValue:m,values:d,groupId:u,className:b}=e,{tabGroupChoices:h,setTabGroupChoices:j}=Object(o.a)(),[y,v]=Object(n.useState)(m);if(null!=u){const e=h[u];null!=e&&e!==y&&d.some((t=>t.value===e))&&v(e)}const O=e=>{v(e),null!=u&&j(u,e)},g=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":a},b)},d.map((({value:e,label:t})=>i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===e,className:Object(l.a)("tabs__item",r.a.tabItem,{"tabs__item--active":y===e}),key:e,ref:e=>g.push(e),onKeyDown:e=>{((e,t,a)=>{switch(a.keyCode){case p:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case s:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(g,e.target,e)},onFocus:()=>O(e),onClick:()=>{O(e)}},t)))),t?Object(n.cloneElement)(c.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},c.map(((e,t)=>Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}},107:function(e,t,a){"use strict";var n=a(3),i=a(0),o=a.n(i);t.a=function({children:e,hidden:t,className:a}){return o.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:t,className:a}),e)}},78:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return u}));var n=a(3),i=a(7),o=(a(0),a(96)),l=a(106),c=a(107),r=a(97),s={id:"example",title:"Tutorial"},p={unversionedId:"android-sdk/example",id:"android-sdk/example",isDocsHomePage:!1,title:"Tutorial",description:"\x3c!--",source:"@site/docs\\android-sdk\\example.mdx",slug:"/android-sdk/example",permalink:"/docs/android-sdk/example",version:"current",sidebar:"docs",previous:{title:"XpayUtils",permalink:"/docs/android-sdk/xpayutils"},next:{title:"Models",permalink:"/docs/android-sdk/classes"}},m=[{value:"Introduction",id:"introduction",children:[]},{value:"What you should already know",id:"what-you-should-already-know",children:[]},{value:"What you&#39;ll learn",id:"what-youll-learn",children:[]},{value:"What you&#39;ll do",id:"what-youll-do",children:[]},{value:"Project code",id:"project-code",children:[]},{value:"Project layout",id:"project-layout",children:[]},{value:"Run The app",id:"run-the-app",children:[]},{value:"1. Prepare for the checkout process",id:"1-prepare-for-the-checkout-process",children:[]},{value:"2. Adding custom fields",id:"2-adding-custom-fields",children:[]},{value:"3. Display active payment methods",id:"3-display-active-payment-methods",children:[]},{value:"4. Set Payment method",id:"4-set-payment-method",children:[]},{value:"5. Populate city-state values",id:"5-populate-city-state-values",children:[]},{value:"6. Validate billing info and preview payment information",id:"6-validate-billing-info-and-preview-payment-information",children:[]},{value:"7. Review Payment information",id:"7-review-payment-information",children:[]},{value:"8. Payment",id:"8-payment",children:[]},{value:"9. Getting Transaction details",id:"9-getting-transaction-details",children:[]}],d={rightToc:m};function u(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(o.a)("h2",{id:"introduction"},"Introduction"),Object(o.a)("p",null,"In this tutorial you learn how to use the XPay KotlinUtils SDK with your Android application."),Object(o.a)("p",null,"The Example app for this tutorial is a simplified shoe store which consists of a single product activity and four other activities for the checkout process."),Object(o.a)("h2",{id:"what-you-should-already-know"},"What you should already know"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("p",{parentName:"li"},"This codelab is written for programmers and assumes that you know either the Java or Kotlin programming language.\nIf you are an experienced programmer and adept at reading code, you will likely be able to follow this codelab, even if you don't have much experience with Kotlin.")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("p",{parentName:"li"},"You should understand the general software development process for Android apps using Android Studio."))),Object(o.a)("h2",{id:"what-youll-learn"},"What you'll learn"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"How to install KotlinUtils in an Android application."),Object(o.a)("li",{parentName:"ul"},"How to use XpayUtils properties and methods to build the checkout process and process payments online.")),Object(o.a)("h2",{id:"what-youll-do"},"What you'll do"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Clone the example app code."),Object(o.a)("li",{parentName:"ul"},"Explore the project layout."),Object(o.a)("li",{parentName:"ul"},"Run the app on virtual or physical devices."),Object(o.a)("li",{parentName:"ul"},"Include and use KotlinUtils using the example codes included here."),Object(o.a)("li",{parentName:"ul"},"Run the app and test a complete payment cycle on XPay testing server.")),Object(o.a)("h2",{id:"project-code"},"Project code"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("p",{parentName:"li"},"Clone this ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/xpayeg/Android-kotlin-sdk-example"}),"repo")," for ",Object(o.a)("strong",{parentName:"p"},"Kotlin")," project code")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("p",{parentName:"li"},"Clone this ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/xpayeg/Android-java-sdk-example"}),"repo")," for ",Object(o.a)("strong",{parentName:"p"},"Java")," project code"))),Object(o.a)("p",null,"Checkout ",Object(o.a)("inlineCode",{parentName:"p"},"example-start")," branch for the starter code and ",Object(o.a)("inlineCode",{parentName:"p"},"example-completed")," branch for the complete code including the code snippets found here."),Object(o.a)("h2",{id:"project-layout"},"Project layout"),Object(o.a)("p",null,"Open the project in Android studio and check out the files inside java/com.xpay.kotlin"),Object(o.a)("p",null,"You will find 5 Kotlin or Java files that contains logic for each activity in our app."),Object(o.a)("p",null,"below is a description for each one:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("strong",{parentName:"li"},"ProductActivity")," is the main activity and it simulates a product page in a shoe store app."),Object(o.a)("li",{parentName:"ul"},Object(o.a)("strong",{parentName:"li"},"UserInfoActivity")," is the first activity in the checkout process that is responsible for getting the user billing information and choosing the payment method"),Object(o.a)("li",{parentName:"ul"},Object(o.a)("strong",{parentName:"li"},"PaymentPreviewActivity")," is the second activity in the checkout process that is responsible for displaying a preview of the payment and displaying the Credit Card form in the case of card payment"),Object(o.a)("li",{parentName:"ul"},Object(o.a)("strong",{parentName:"li"},"CashPaymentActivity")," is the third activity in the checkout process (in case of Kiosk/Cash collection) that is responsible for displaying payment refrence number to the user"),Object(o.a)("li",{parentName:"ul"},Object(o.a)("strong",{parentName:"li"},"TransactionActivity")," is the fifth activity that is responsible for displaying transaction information for the user")),Object(o.a)("h2",{id:"run-the-app"},"Run The app"),Object(o.a)("p",null,"After you explored the project code and made yourself comfortable with it,\ngo ahead and run it either on an emulator or your physical device"),Object(o.a)("p",null,"After the app build and run you will see the fake product page on the main screen,\ngo ahead and explore it then try to click the checkout button at the end of the screen you will find that it does nothing."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/01.gif")}),Object(o.a)("p",null,"in the upcoming sections we are going to edit the ProductActivity code to start the checkout process but first let's install KotlinUtils in our app."),Object(o.a)("h2",{id:"1-prepare-for-the-checkout-process"},"1. Prepare for the checkout process"),Object(o.a)("p",null,"Let's start implementing the checkout process. First, We need to set our credentials."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Open ProductActivity inside the java folder.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to ",Object(o.a)("inlineCode",{parentName:"p"},"onCreate")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"01-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"01-end"),"."))),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"'}),'// set XpayUtils core settings\nXpayUtils.apiKey = "Cce74Y3B.J0P4tItq7hGu2ddhCB0WF5ND1eTubkpT"\nXpayUtils.communityId = "m2J7eBK"\nXpayUtils.apiPaymentId = 60\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"'}),'// set XpayUtils core settings\nXpayUtils.INSTANCE.setApiKey("Cce74Y3B.J0P4tItq7hGu2ddhCB0WF5ND1eTubkpT");\nXpayUtils.INSTANCE.setCommunityId("m2J7eBK");\nXpayUtils.INSTANCE.setApiPaymentId(60);\n')))),Object(o.a)("p",null,"The Above code sets the required settings to start using XpayUtils which are:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/api-key"}),"API key")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/api-key"}),"Community ID")),Object(o.a)("li",{parentName:"ul"},Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/api-payments"}),"API payment ID"))),Object(o.a)("div",{className:"admonition admonition-info alert alert--info"},Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.a)("h5",{parentName:"div"},Object(o.a)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.a)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.a)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.a)("p",{parentName:"div"},"since XpayUtils is a singelton class, it's instance is created after the first access to any of it's properties or methods."))),Object(o.a)("p",null,"Now, let's start the checkout process by calling ",Object(o.a)("inlineCode",{parentName:"p"},"prepareAmount()")," method with the total amount of the cart."),Object(o.a)("ol",{start:3},Object(o.a)("li",{parentName:"ol"},"Go to the end of ",Object(o.a)("inlineCode",{parentName:"li"},"onCreate")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"02-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"02-end"),".")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"'}),"lifecycleScope.launch {\n  try {\n    dialog?.show()\n    XpayUtils.prepareAmount(totalAmount)\n    goToCheckout()\n  } catch (e: Exception) {\n    dialog?.hide()\n    e.message?.let { it1 -> displayError(it1) }\n  }\n}\n"))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"'}),"XpayUtils.INSTANCE.prepareAmount(totalAmount, prepareCallback);\n\n")))),Object(o.a)("p",null,"The above code will get called when the checkout button is clicked, it does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Show up loading screen.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Call ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/android-sdk/xpayutils#prepareamount"}),Object(o.a)("inlineCode",{parentName:"a"},"prepareAmount()"))," method with the total amount of the user's cart which if successfull does the following:"),Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Get the active payment methods available to your community and set them in ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/android-sdk/xpayutils#activepaymentmethods"}),"activePaymentMethods"),"."),Object(o.a)("li",{parentName:"ul"},"Get the total amount including fees(if any) for each active payment method and set them in ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/android-sdk/xpayutils#paymentoptionstotalamounts"}),"PaymentOptionsTotalAmounts"),"."),Object(o.a)("li",{parentName:"ul"},"Return ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"/android-sdk/classes#prepareamountdata"}),"PrepareAmountData")," object which represents the total amount including fees (if any) for each active payment method."))),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"If the request is successfull call ",Object(o.a)("inlineCode",{parentName:"p"},"goToCheckout()")," function which for now it just:"),Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Hide the loading screen"),Object(o.a)("li",{parentName:"ul"},"Navigates to UserInfoActivity activity."))),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"If an exception occured,"),Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Hide the loading screen"),Object(o.a)("li",{parentName:"ul"},"Call ",Object(o.a)("inlineCode",{parentName:"li"},"displayError(res)")," function with the result which displays the error message in a Toast.")))),Object(o.a)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.a)("h5",{parentName:"div"},Object(o.a)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.a)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.a)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.a)("p",{parentName:"div"},Object(o.a)("inlineCode",{parentName:"p"},"XpayUtils.prepareAmount()")," is a suspend function, it has to run inside a Coroutine/Async Scope."))),Object(o.a)("hr",null),Object(o.a)("h2",{id:"2-adding-custom-fields"},"2. Adding custom fields"),Object(o.a)("p",null,"If you want to save extra information with the transaction in XPay servers like in this example, the color and size chosen, You can do so using custom fields methods."),Object(o.a)("p",null,"Go to the ",Object(o.a)("inlineCode",{parentName:"p"},"goToCheckout")," function definition and add the following code between the the commented lines that says ",Object(o.a)("inlineCode",{parentName:"p"},"03-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"03-end"),"."),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/ProductActivity.kt"'}),'XpayUtils.addCustomField("color", color)\nXpayUtils.addCustomField("size", size)\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/ProductActivity.java"'}),'XpayUtils.INSTANCE.addCustomField("color", color);\nXpayUtils.INSTANCE.addCustomField("size", size);\n')))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Add the value of the chosen color stored in the ",Object(o.a)("inlineCode",{parentName:"li"},"color"),' variable as a custom field with a key value of "color"'),Object(o.a)("li",{parentName:"ol"},"Add the value of the chosen size stored in the ",Object(o.a)("inlineCode",{parentName:"li"},"size"),' variable as a custom field with a key value of "size"')),Object(o.a)("p",null,"Try to run the app again and click on the checkout button in the first activity."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/02.gif")}),Object(o.a)("p",null,"Now when you click on the checkout button, you see the loading windows shows up while making the request then\nit takes you to the checkout activity where the user submit his billing info and choose payment method.\nBut you will find that the payment options dropdown is empty."),Object(o.a)("p",null,"In the next section you will populate the empty dropdown with the available payment methods."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"3-display-active-payment-methods"},"3. Display active payment methods"),Object(o.a)("p",null,"Now it's time to read the avilable payment methods to your community and pass them to the\npayment options dropdown so the user can choose one of them."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to UserInfoActivity inside the java folder.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to ",Object(o.a)("inlineCode",{parentName:"p"},"onCreate")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"01-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"01-end"),"."))),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"'}),"// Populate paymentMethodsDropdown with available active payment methods\nval paymentMethodsAdapter: ArrayAdapter<String>?\nval paymentMethodsList: MutableList<String> = mutableListOf()\n// get the available active payment methods and convert it to List<String>\nfor (paymentMethod in XpayUtils.activePaymentMethods) {\n    paymentMethodsList.add(paymentMethod.toString())\n}\npaymentMethodsAdapter = paymentMethodsList.distinct().toList().let {\n    ArrayAdapter(\n        this, android.R.layout.simple_spinner_item, it\n    )\n}\npaymentMethodsAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\npaymentMethodsDropdown.adapter = paymentMethodsAdapter\n"))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"'}),"// Populate paymentMethodsDropdown with available active payment methods\nArrayAdapter<String> adapter = null;\nList<String> paymentMethodsList = new ArrayList<String>();\n// get the available active payment methods and convert it to List<String>\nfor (PaymentMethods i : mSpinnerData) {\n  paymentMethodsList.add(i.toString());\n}\n\n\nSet<String> set = new LinkedHashSet<>(paymentMethodsList);\npaymentMethodsList.clear();\npaymentMethodsList.addAll(set);\n\n// Populate paymentMethodsDropdown with available active payment methods\nadapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, paymentMethodsList);\nadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\npaymentMethodsDropdown.setAdapter(adapter);\n")))),Object(o.a)("p",null,"The above code will get called when the activity is created, it does the following in order:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Read the available payment methods found in ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.activePaymentMethods")," after ",Object(o.a)("inlineCode",{parentName:"li"},"prepareAmount()")," method was called."),Object(o.a)("li",{parentName:"ul"},"Converts the available payment methods found in ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.activePaymentMethods")," to a list of String values."),Object(o.a)("li",{parentName:"ul"},"Pass the converted list to the paymentMethodsDropdown adapter so it's shown in the payment method dropdown.")),Object(o.a)("hr",null),Object(o.a)("h2",{id:"4-set-payment-method"},"4. Set Payment method"),Object(o.a)("p",null,"Navigate to the overriden ",Object(o.a)("inlineCode",{parentName:"p"},"onItemSelected")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"02-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"02-end"),"."),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"'}),'\nwhen (XpayUtils.activePaymentMethods[position]) {\n  PaymentMethods.CASH -> {\n      totalAmount = XpayUtils.PaymentOptionsTotalAmounts?.cash!!\n      XpayUtils.payUsing = PaymentMethods.CASH\n      showView(constraint_shipping)\n  }\n  PaymentMethods.CARD -> {\n      totalAmount = XpayUtils.PaymentOptionsTotalAmounts?.card!!\n      XpayUtils.payUsing = PaymentMethods.CARD\n      hideView(constraint_shipping)\n  }\n  PaymentMethods.KIOSK -> {\n      totalAmount = XpayUtils.PaymentOptionsTotalAmounts?.kiosk!!\n      XpayUtils.payUsing = PaymentMethods.KIOSK\n      hideView(constraint_shipping)\n  }\n}\ntotalAmount = String.format("%.2f", totalAmount).toDouble()\ntotalAmountTxt.text = "Total Amount: ${totalAmount} Egp"\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"'}),'case CASH: {\n  amount = Objects.requireNonNull(XpayUtils.INSTANCE.getPaymentOptionsTotalAmounts()).getCash();\n  XpayUtils.INSTANCE.setPayUsing(PaymentMethods.CASH);\n  showView(parent);\n  break;\n}\ncase CARD: {\n  amount = Objects.requireNonNull(XpayUtils.INSTANCE.getPaymentOptionsTotalAmounts()).getCard();\n  XpayUtils.INSTANCE.setPayUsing(PaymentMethods.CARD);\n  hideView(parent);\n  validForm = true;\n  break;\n}\ncase KIOSK: {\n  amount = Objects.requireNonNull(XpayUtils.INSTANCE.getPaymentOptionsTotalAmounts()).getKiosk();\n  XpayUtils.INSTANCE.setPayUsing(PaymentMethods.KIOSK);\n  hideView(parent);\n  validForm = true;\n  break;\n}\n}\namount = Double.parseDouble(String.format("%.2f", amount));\ntotalAmount.setText("Total Amount: " + amount + " Egp");\n')))),Object(o.a)("p",null,"The above code is called whenever the user chooses a payment method from the payment methods dropdown, it does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Sets the payment method chosen in ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.payUsing")," property."),Object(o.a)("li",{parentName:"ol"},"Displays the total amount that will be paid for the payment method chosen from ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.PaymentOptionsTotalAmounts")," property."),Object(o.a)("li",{parentName:"ol"},"Show Shipping information form if cash collection method was chosen, and hide it otherwise.")),Object(o.a)("p",null,"Try to run the app again and click on the checkout button in the first activity."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/03.gif")}),Object(o.a)("p",null,"Now when you go to UserInfoActivity, you will notice that the payment methods dropdown have three options; card, cash, and kiosk.\neach time you choose a different payment method the total amount in the text below will change accordingly."),Object(o.a)("p",null,"You can also see that the shipping information form appears when you use cash as the payment method.\nIt is useless for now but in the next section you will populate it's city and state dropdowns with values."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"5-populate-city-state-values"},"5. Populate city-state values"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Go to the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"03-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"03-end")," inside ",Object(o.a)("inlineCode",{parentName:"li"},"onCreate")," function and add the following code")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"'}),'// get the value of countries-cities combinations from assets\nval jsonFileString = getJsonDataFromAsset(applicationContext, "countries.json")\nval obj = JSONObject(jsonFileString!!)\n\nval countriesList = populateCountries(obj)\n}\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"'}),'JSONObject obj = new JSONObject();\nString jsonFileString = getJsonDataFromAsset(this, "countries.json");\ntry {\n  assert jsonFileString != null;\n  obj = new JSONObject(jsonFileString);\n} catch (JSONException e) {\n  e.printStackTrace();\n}\nList<String> finalAllCountries = populateCountries(obj);\nJSONObject finalObj = (JSONObject) obj;\n')))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Read the ",Object(o.a)("inlineCode",{parentName:"li"},"countries.json")," file from assets which contains the city-state combination"),Object(o.a)("li",{parentName:"ul"},"call ",Object(o.a)("inlineCode",{parentName:"li"},"populateCountries(obj)")," method which:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"return a list of type string that represents the cities"),Object(o.a)("li",{parentName:"ul"},"pass the list to the cities dropdown adapter")))),Object(o.a)("ol",{start:2},Object(o.a)("li",{parentName:"ol"},"Go to the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"04-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"04-end")," inside ",Object(o.a)("inlineCode",{parentName:"li"},"onCreate")," function and add the following code")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"'}),"populateStates(obj, countriesList[position])\n"))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"'}),"populateStates(finalObj, finalAllCountries.get(i));\n")))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"When the user selects a city, it calls ",Object(o.a)("inlineCode",{parentName:"li"},"populateStates()")," method which:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Get a list of type string that represents the states that belongs to the city chosen"),Object(o.a)("li",{parentName:"ul"},"pass the states list to the state dropdown adapter")))),Object(o.a)("p",null,"Try to run the app again and click on the checkout button in the first activity."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/04.gif")}),Object(o.a)("p",null,"Now when you go to UserInfoActivity, select cash as the payment method."),Object(o.a)("p",null,"when the shipping information form appears you can now select a city state combination using the values in the dropdowns."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"6-validate-billing-info-and-preview-payment-information"},"6. Validate billing info and preview payment information"),Object(o.a)("p",null,"Now it's time to validate the billing info before submitting a payment request."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Go to the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"05-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"05-end")," inside ",Object(o.a)("inlineCode",{parentName:"li"},"onCreate")," function and add the following code")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/UserInfoActivity.kt"'}),'var validShippingInfo: Boolean = true\nif (constraint_shipping.visibility == View.VISIBLE) {\n  if (validateShippingInfo()) {\n    validShippingInfo = true\n    // set payment shipping info\n    XpayUtils.ShippingInfo = ShippingInfo(\n        "EG",\n        sp_state.selectedItem.toString(),\n        sp_country.selectedItem.toString(),\n        et_apartment.text.toString(),\n        et_building.text.toString(),\n        et_floor.text.toString(),\n        et_street.text.toString()\n    )\n  } else validShippingInfo = false\n}\n\nif (validateBillingInfo() && validShippingInfo) {\n// set payment billing info\ntry {\n  XpayUtils.billingInfo =\n    BillingInfo(\n      userName.text.toString(),\n      userEmail.text.toString(),\n      "+2${userPhone.text}"\n    )\n  val intent = Intent(this, PaymentPreviewActivity::class.java)\n  intent.putExtra("TOTAL_AMOUNT", totalAmount.toString())\n  startActivity(intent)\n} catch (e: Exception) {\n  e.message?.let { it1 -> Toast.makeText(this, it1, Toast.LENGTH_LONG).show() }\n}\n}\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/UserInfoActivity.java"'}),'boolean validShippingInfo = true;\nif (parent.getVisibility() == View.VISIBLE) {\n  if (validateShippingInfo()) {\n    validShippingInfo = true;\n    // set payment shipping info\n    XpayUtils.INSTANCE.setShippingInfo(new ShippingInfo(\n      "EG",\n      state.getSelectedItem().toString(),\n      country.getSelectedItem().toString(),\n      apartment.getText().toString(),\n      building.getText().toString(),\n      floor.getText().toString(),\n      street.getText().toString()\n  ));\n  } else validShippingInfo = false;\n}\n\nif (validateBillingInfo() && validShippingInfo) {\n  // set payment billing info\n  try {\n    XpayUtils.INSTANCE.setBillingInfo(new BillingInfo(name.getText().toString(), email.getText().toString(), "+2" + phone.getText().toString()));\n    Intent intent = new Intent(getApplicationContext(), PaymentPreviewActivity.class);\n    intent.putExtra("TOTAL_AMOUNT", amount.toString());\n    startActivity(intent);\n  } catch (Exception e) {\n    Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_LONG).show();\n  }\n}\n')))),Object(o.a)("p",null,"The above code is called when the submit button in UserInfoActivity is clicked, it does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Define and set a var ",Object(o.a)("inlineCode",{parentName:"p"},"validShippingInfo")," to ",Object(o.a)("inlineCode",{parentName:"p"},"true"))),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Checks if the shipping form is visible:"),Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"If true it checks the return value of ",Object(o.a)("inlineCode",{parentName:"li"},"validateShippingInfo()")," method which checks that non of the shipping information ofrm values are not empty:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"if true, sets ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.ShippingInfo")," property using ",Object(o.a)("inlineCode",{parentName:"li"},"ShippingInfo")," data class"),Object(o.a)("li",{parentName:"ul"},"if false, it sets ",Object(o.a)("inlineCode",{parentName:"li"},"validShippingInfo")," to ",Object(o.a)("inlineCode",{parentName:"li"},"false")))))),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Checks the return value of ",Object(o.a)("inlineCode",{parentName:"p"},"validateBillingInfo()")," method and ",Object(o.a)("inlineCode",{parentName:"p"},"validShippingInfo")," var"),Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"if true, set ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.userInfo")," property using ",Object(o.a)("inlineCode",{parentName:"li"},"User")," data class and start a PaymentPreviewActivity")))),Object(o.a)("p",null,Object(o.a)("inlineCode",{parentName:"p"},"validateBillingInfo()")," method does nothing more than check that the values in the billing information is not empty."),Object(o.a)("p",null,"We recommend implementing your own verification logic that checks that the billing informations follow the Regex patterns found ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/android-sdk/classes#billinginfo"}),"here"),"."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"7-review-payment-information"},"7. Review Payment information"),Object(o.a)("p",null,"Now it's time you show the user a preview of the payment information he provided before taking him to the final step which is payment."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Open PaymentPreviewActivity inside the java folder.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to ",Object(o.a)("inlineCode",{parentName:"p"},"onCreate")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"01-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"01-end"),"."))),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"'}),'textName.text = "Name: \\n${XpayUtils.billingInfo!!.name}"\ntextEmail.text = "Email: \\n${XpayUtils.billingInfo!!.email}"\ntxtPhone.text = "Phone: \\n${XpayUtils.billingInfo?.phone}"\ntxtMethod.text = "Payment Method: \\n${XpayUtils.payUsing}"\ntotalAmount.text = "Total Amount: \\n${intent.getStringExtra("TOTAL_AMOUNT")?.toDouble()}"\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"'}),'txt_name.setText("Name: \\n" + XpayUtils.INSTANCE.getBillingInfo().getName());\ntxt_mail.setText("Email: \\n" + XpayUtils.INSTANCE.getBillingInfo().getEmail());\ntxt_phone.setText("Phone: \\n" + XpayUtils.INSTANCE.getBillingInfo().getPhone());\ntxtcomm_id.setText("Community Id: \\n" + XpayUtils.INSTANCE.getCommunityId());\ntxt_varid.setText("Variable amount: \\n" + XpayUtils.INSTANCE.getApiPaymentId());\ntxt_method.setText("Payment method: \\n" + XpayUtils.INSTANCE.getPayUsing());\ntxt_total.setText("Total Amount: \\n" + getIntent().getStringExtra("TOTAL_AMOUNT"));\n')))),Object(o.a)("p",null,"The above code sets each text box in the PaymentPreviewActivity corresponding layout\nto the values you set before for the billing information in the previous section using ",Object(o.a)("inlineCode",{parentName:"p"},"XpayUtils.userInfo")," and ",Object(o.a)("inlineCode",{parentName:"p"},"XpayUtils.payUsing")),Object(o.a)("p",null,"Try to run the app again go to UserInfoActivity, click on the confirm button."),Object(o.a)("p",null,"You will be navigated to the PaymentPreviewActivity which will display the payment information submitted and the total amount to be paid."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/05.gif")}),Object(o.a)("ol",{start:3},Object(o.a)("li",{parentName:"ol"},"go between the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"02-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"02-end")," and add the following code.")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"'}),"try {\n  dialog!!.show()\n  GlobalScope.launch {\n  val response = XpayUtils.pay()\n  response?.let { completePayment(response) }\n}\n} catch (e: Exception) {\n  dialog?.dismiss()\n  e.message?.let { it1 -> Toast.makeText(this, it1, Toast.LENGTH_LONG).show() }\n}\n"))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"'}),"try {\n  dialog.show();\n  XpayUtils.INSTANCE.pay(payCallback);\n} catch (Exception e) {\n  Toast.makeText(PaymentPreviewActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();\n}\n")))),Object(o.a)("p",null,"The above code will get called when the PAY button is clicked, it does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Show up loading screen."),Object(o.a)("li",{parentName:"ol"},"Call ",Object(o.a)("inlineCode",{parentName:"li"},"pay")," method to start processing the payment."),Object(o.a)("li",{parentName:"ol"},"If the request is successfull call ",Object(o.a)("inlineCode",{parentName:"li"},"completePayment()")," function with the response which for now it just:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Hide the loading screen"))),Object(o.a)("li",{parentName:"ol"},"If an exception occured,",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"Hide the loading screen"),Object(o.a)("li",{parentName:"ul"},"displays the error message in a Toast.")))),Object(o.a)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.a)("h5",{parentName:"div"},Object(o.a)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.a)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.a)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.a)("p",{parentName:"div"},Object(o.a)("inlineCode",{parentName:"p"},"XpayUtils.pay()")," is a suspend function it has to run inside a Coroutine/Async Scope."))),Object(o.a)("hr",null),Object(o.a)("h2",{id:"8-payment"},"8. Payment"),Object(o.a)("p",null,"Now it's time to build the final payment step in the checkout process."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Go to ",Object(o.a)("inlineCode",{parentName:"li"},"completePayment(response: PayData)")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"03-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"03-end"),".")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"'}),'if (response.iframe_url != null) {\n  // if iframe_url inside the returned response is not null, launch a web view to display the payment form\n  isCardPayment = true\n  uuid = response.transaction_uuid\n  // start a web view and navigate the user to the credit card form\n  val builder = CustomTabsIntent.Builder()\n  builder.setToolbarColor(resources.getColor(R.color.colorPrimary))\n  builder.setShowTitle(true)\n  val customTabsIntent: CustomTabsIntent = builder.build()\n  customTabsIntent.launchUrl(this@PaymentPreviewActivity, Uri.parse(response.iframe_url))\n} else if (response.message != null) {\n  // if iframe_url inside the returned response is null while the message is not null\n  // this is a kiosk or cash collection payment, just display the message to the user\n  isCardPayment = false\n  val intent = Intent(baseContext, CashPaymentActivity::class.java)\n  intent.putExtra("UUID", response.transaction_uuid)\n  intent.putExtra("MESSAGE", response.message)\n  startActivity(intent)\n  }\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"'}),'if (response.getIframe_url() != null) {\n  // if iframe_url inside the returned response is not null, launch a web view to display the payment form\n  isCardPayment = true;\n  uuid = response.getTransaction_uuid();\n  // start a web view and navigate the user to the credit card form\n  CustomTabsIntent.Builder builder = new CustomTabsIntent.Builder();\n  builder.setToolbarColor(R.color.colorPrimary);\n  builder.setShowTitle(true);\n  CustomTabsIntent customTabsIntent = builder.build();\n  customTabsIntent.launchUrl(this, Uri.parse(response.getIframe_url()));\n} else if (response.getMessage() != null) {\n  // if iframe_url inside the returned response is null while the message is not null\n  // this is a kiosk or cash collection payment, just display the message to the user\n  isCardPayment = false;\n  Intent intent = new Intent(this, CashPaymentActivity.class);\n  intent.putExtra("UUID", response.getTransaction_uuid());\n  intent.putExtra("MESSAGE", response.getMessage());\n  startActivity(intent);\n}\n')))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("p",null,"Checks if the ",Object(o.a)("inlineCode",{parentName:"p"},"iframe_url")," value of the response passed"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"If not null, then this is is a credit card payment:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"set ",Object(o.a)("inlineCode",{parentName:"li"},"isCardPayment")," to ",Object(o.a)("inlineCode",{parentName:"li"},"true"),"."),Object(o.a)("li",{parentName:"ul"},"setup a web view using ",Object(o.a)("a",Object(n.a)({parentName:"li"},{href:"https://developers.google.com/web/android/custom-tabs"}),"Custom tabs"),"."),Object(o.a)("li",{parentName:"ul"},"Start the web view and Navigate to the credit card form using the value found inside ",Object(o.a)("inlineCode",{parentName:"li"},"iframe_url"),"."))),Object(o.a)("li",{parentName:"ul"},"If null, check if the ",Object(o.a)("inlineCode",{parentName:"li"},"message")," value of the response passed",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"If not null, then this is a kiosk/cash collection payment:",Object(o.a)("ul",{parentName:"li"},Object(o.a)("li",{parentName:"ul"},"set ",Object(o.a)("inlineCode",{parentName:"li"},"isCardPayment")," to ",Object(o.a)("inlineCode",{parentName:"li"},"false"),"."),Object(o.a)("li",{parentName:"ul"},"create an Intent for the CashPaymentActivity"),Object(o.a)("li",{parentName:"ul"},"pass ",Object(o.a)("inlineCode",{parentName:"li"},"transaction_uuid")," and ",Object(o.a)("inlineCode",{parentName:"li"},"message")," values of the response to the intent."),Object(o.a)("li",{parentName:"ul"},"start to CashPaymentActivity which displays the response message content.")))))),Object(o.a)("p",null,"Try to run the app again and follow the checkout cycle till you click the PAY button."),Object(o.a)("p",null,"If you chose KIOSK or cash collection payment method, you will be redirected to PaymentPreviewActivity which will display the response message."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/07.gif")}),Object(o.a)("p",null,"If you chose card payment method, you will be redirected to credit card form."),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/06.gif")}),Object(o.a)("p",null,"You can use the testing credit card information found ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/android-sdk/installation#test"}),"here")," in the form."),Object(o.a)("p",null,"When you submit the credit card information it will take you to a ACS emulator form, ignore that and press submit again."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"9-getting-transaction-details"},"9. Getting Transaction details"),Object(o.a)("p",null,"Later on, you might need to show the user details about his past transactions,\nwhether to check on the transaction status or get other info like total amount paid or even the custom fields that was saved with the transaction."),Object(o.a)("p",null,"You can get a transaction details using ",Object(o.a)("inlineCode",{parentName:"p"},"XpayUtils.getTransaction(transactionUuid: String)")," method and the transaction UUID."),Object(o.a)("p",null,"We will implement this method in our app so that when the user closes the web view of the credit card form,\nIt navigates him to the TransactionActivity which shows him the current transaction status as well as other information."),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to PaymentPreviewActivity inside the java folder.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to ",Object(o.a)("inlineCode",{parentName:"p"},"onRestart()")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"04-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"04-end"),"."))),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/PaymentPreviewActivity.kt"'}),'if (isCardPayment) {\n  val intent = Intent(this, TransactionActivity::class.java)\n  intent.putExtra("UUID", uuid)\n  startActivity(intent)\n}\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/PaymentPreviewActivity.java"'}),'if (isCardPayment) {\n  Intent intent = new Intent(this, TransactionActivity.class);\n  intent.putExtra("UUID", uuid);\n  startActivity(intent);\n}\n')))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("p",null,"Check if the ",Object(o.a)("inlineCode",{parentName:"p"},"isCardPayment")," is ",Object(o.a)("inlineCode",{parentName:"p"},"true")," and if so:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"create an Intent for the TransactionActivity."),Object(o.a)("li",{parentName:"ul"},"pass ",Object(o.a)("inlineCode",{parentName:"li"},"transaction_uuid")," value of the response to the intent."),Object(o.a)("li",{parentName:"ul"},"Go to TransactionActivity.")),Object(o.a)("div",{className:"admonition admonition-info alert alert--info"},Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.a)("h5",{parentName:"div"},Object(o.a)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.a)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.a)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.a)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.a)("p",{parentName:"div"},Object(o.a)("inlineCode",{parentName:"p"},"onRestart")," function gets triggered when the the user closes the web view (when the current activity is being re-displayed to the user)\nRead more about it ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"https://developer.android.com/reference/android/app/Activity#onRestart()"}),"here")))),Object(o.a)("ol",{start:3},Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to TransactionActivity inside the java folder.")),Object(o.a)("li",{parentName:"ol"},Object(o.a)("p",{parentName:"li"},"Go to ",Object(o.a)("inlineCode",{parentName:"p"},"onStart()")," function and add the following code between the commented lines ",Object(o.a)("inlineCode",{parentName:"p"},"01-start")," and ",Object(o.a)("inlineCode",{parentName:"p"},"01-end"),"."))),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/TransactionActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/TransactionActivity.kt"'}),'uuid = intent.getStringExtra("UUID")\nuuid?.let { loadTransaction(it) }\n'))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/TransactionActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/TransactionActivity.java"'}),"loadTransaction(uuid);\n")))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"Get the value of the UUID passed to the intent."),Object(o.a)("li",{parentName:"ul"},"call ",Object(o.a)("inlineCode",{parentName:"li"},"loadTransaction()")," function with the value of the UUID")),Object(o.a)("ol",{start:5},Object(o.a)("li",{parentName:"ol"},"Go to ",Object(o.a)("inlineCode",{parentName:"li"},"loadTransaction()")," function and add the following code between the the commented lines ",Object(o.a)("inlineCode",{parentName:"li"},"02-start")," and ",Object(o.a)("inlineCode",{parentName:"li"},"02-end"),".")),Object(o.a)(l.a,{defaultValue:"kt",values:[{label:"Kotlin",value:"kt"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(o.a)(c.a,{value:"kt",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-kt",metastring:'title="/app/src/main/java/com.xpay.kotlin/TransactionActivity.kt"',title:'"/app/src/main/java/com.xpay.kotlin/TransactionActivity.kt"'}),"lifecycleScope.launch {\n  try {\n    dialog?.show()\n    Uid.let { it ->\n      val res = XpayUtils.getTransaction(it)\n      res?.let { updateTransaction(it) }\n    }\n  } catch (e: Exception) {\n    dialog?.dismiss()\n    e.message?.let { displayError(e.message.toString()) }\n  }\n}\n"))),Object(o.a)(c.a,{value:"java",mdxType:"TabItem"},Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{className:"language-java",metastring:'title="/app/src/main/java/com.xpay.sdkjava/TransactionActivity.java"',title:'"/app/src/main/java/com.xpay.sdkjava/TransactionActivity.java"'}),"dialog.show();\ntry {\n  XpayUtils.INSTANCE.getTransaction(Uid, TransactionCallback);\n} catch (Exception e) {\n  dialog.dismiss();\n  runOnUiThread(new Runnable() {\n  @Override\n  public void run() {\n    Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_SHORT).show();\n  }\n  });\n}\n")))),Object(o.a)("p",null,"The above code does the following:"),Object(o.a)("ol",null,Object(o.a)("li",{parentName:"ol"},"Start a Coroutine Scope"),Object(o.a)("li",{parentName:"ol"},"Try to call the ",Object(o.a)("inlineCode",{parentName:"li"},"XpayUtils.getTransaction()")," and if successfull call the ",Object(o.a)("inlineCode",{parentName:"li"},"updateTransaction()")," function with the response which updates the view with the transaction info."),Object(o.a)("li",{parentName:"ol"},"If an error occured, call the ",Object(o.a)("inlineCode",{parentName:"li"},"displayError()")," function to display the error message in a toast.")),Object(o.a)("p",null,"Try to run the app again and make a card payment using the testing credit card information found ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/android-sdk/installation#test"}),"here")),Object(o.a)("img",{alt:"Add API key",src:Object(r.a)("kotlinsdk/04.gif")}),Object(o.a)("p",null,"After getting a response message from the server close the web view, you will be navigated to TransactionActivity and you will see the latest transaction information.\nyou can compare the status value with the message you got in the web view."))}u.isMDXComponent=!0},96:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,b=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return a?i.a.createElement(b,c(c({ref:t},s),{},{components:a})):i.a.createElement(b,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var c={};for(var r in t)hasOwnProperty.call(t,r)&&(c[r]=t[r]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var s=2;s<o;s++)l[s]=a[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},97:function(e,t,a){"use strict";a.d(t,"b",(function(){return o})),a.d(t,"a",(function(){return l}));var n=a(22),i=a(98);function o(){const{siteConfig:{baseUrl:e="/",url:t}={}}=Object(n.default)();return{withBaseUrl:(a,n)=>function(e,t,a,{forcePrependBaseUrl:n=!1,absolute:o=!1}={}){if(!a)return a;if(a.startsWith("#"))return a;if(Object(i.b)(a))return a;if(n)return t+a;const l=a.startsWith(t)?a:t+a.replace(/^\//,"");return o?e+l:l}(t,e,a,n)}}function l(e,t={}){const{withBaseUrl:a}=o();return a(e,t)}},98:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return i}))},99:function(e,t,a){"use strict";function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}}}]);