{"remainingRequest":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/babel-loader/lib/index.js??ref--11-1!/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/samir/xpay/docs/XPay-Docs-new/docs/android-sdk/installation.mdx","dependencies":[{"path":"/home/samir/xpay/docs/XPay-Docs-new/docs/android-sdk/installation.mdx","mtime":1671624297152},{"path":"/home/samir/xpay/docs/XPay-Docs-new/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-android-sdk-installation-mdx-c66.json","mtime":1681220735598},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/cache-loader/dist/cjs.js","mtime":1676472358883},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/babel-loader/lib/index.js","mtime":1676472360286},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1676472372907},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1676472373139}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}