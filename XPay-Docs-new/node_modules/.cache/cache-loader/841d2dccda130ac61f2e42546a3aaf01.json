{"remainingRequest":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/babel-loader/lib/index.js??ref--7-1!/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/core/lib/client/App.js","dependencies":[{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/core/lib/client/App.js","mtime":1676472384204},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/cache-loader/dist/cjs.js","mtime":1676472358883},{"path":"/home/samir/xpay/docs/XPay-Docs-new/node_modules/babel-loader/lib/index.js","mtime":1676472360286}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3Qse3VzZUVmZmVjdCx1c2VTdGF0ZX1mcm9tJ3JlYWN0JztpbXBvcnQgcm91dGVzIGZyb20nQGdlbmVyYXRlZC9yb3V0ZXMnO2ltcG9ydCBzaXRlQ29uZmlnIGZyb20nQGdlbmVyYXRlZC9kb2N1c2F1cnVzLmNvbmZpZyc7aW1wb3J0IGdsb2JhbERhdGEgZnJvbSdAZ2VuZXJhdGVkL2dsb2JhbERhdGEnO2ltcG9ydCBzaXRlTWV0YWRhdGEgZnJvbSdAZ2VuZXJhdGVkL3NpdGUtbWV0YWRhdGEnO2ltcG9ydCByZW5kZXJSb3V0ZXMgZnJvbScuL2V4cG9ydHMvcmVuZGVyUm91dGVzJztpbXBvcnQgRG9jdXNhdXJ1c0NvbnRleHQgZnJvbScuL2V4cG9ydHMvY29udGV4dCc7aW1wb3J0IFBlbmRpbmdOYXZpZ2F0aW9uIGZyb20nLi9QZW5kaW5nTmF2aWdhdGlvbic7aW1wb3J0IEJhc2VVcmxJc3N1ZUJhbm5lciBmcm9tJy4vYmFzZVVybElzc3VlQmFubmVyL0Jhc2VVcmxJc3N1ZUJhbm5lcic7aW1wb3J0Jy4vY2xpZW50LWxpZmVjeWNsZXMtZGlzcGF0Y2hlcic7ZnVuY3Rpb24gQXBwKCl7Y29uc3RbaXNDbGllbnQsc2V0SXNDbGllbnRdPXVzZVN0YXRlKGZhbHNlKTt1c2VFZmZlY3QoKCk9PntzZXRJc0NsaWVudCh0cnVlKTt9LFtdKTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEb2N1c2F1cnVzQ29udGV4dC5Qcm92aWRlcix7dmFsdWU6e3NpdGVDb25maWcsc2l0ZU1ldGFkYXRhLGdsb2JhbERhdGEsaXNDbGllbnR9fSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCYXNlVXJsSXNzdWVCYW5uZXIsbnVsbCksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUGVuZGluZ05hdmlnYXRpb24se3JvdXRlczpyb3V0ZXN9LHJlbmRlclJvdXRlcyhyb3V0ZXMpKSk7fWV4cG9ydCBkZWZhdWx0IEFwcDs="},{"version":3,"sources":["/home/samir/xpay/docs/XPay-Docs-new/node_modules/@docusaurus/core/lib/client/App.js"],"names":["React","useEffect","useState","routes","siteConfig","globalData","siteMetadata","renderRoutes","DocusaurusContext","PendingNavigation","BaseUrlIssueBanner","App","isClient","setIsClient","createElement","Provider","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,mBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,yCAA/B,CACA,MAAO,gCAAP,CACA,QAASC,CAAAA,GAAT,EAAe,CACX,KAAM,CAACC,QAAD,CAAWC,WAAX,EAA0BX,QAAQ,CAAC,KAAD,CAAxC,CACAD,SAAS,CAAC,IAAM,CACZY,WAAW,CAAC,IAAD,CAAX,CACH,CAFQ,CAEN,EAFM,CAAT,CAGA,mBAAQb,KAAK,CAACc,aAAN,CAAoBN,iBAAiB,CAACO,QAAtC,CAAgD,CAAEC,KAAK,CAAE,CAAEZ,UAAF,CAAcE,YAAd,CAA4BD,UAA5B,CAAwCO,QAAxC,CAAT,CAAhD,cACJZ,KAAK,CAACc,aAAN,CAAoBJ,kBAApB,CAAwC,IAAxC,CADI,cAEJV,KAAK,CAACc,aAAN,CAAoBL,iBAApB,CAAuC,CAAEN,MAAM,CAAEA,MAAV,CAAvC,CAA2DI,YAAY,CAACJ,MAAD,CAAvE,CAFI,CAAR,CAGH,CACD,cAAeQ,CAAAA,GAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from 'react';\nimport routes from '@generated/routes';\nimport siteConfig from '@generated/docusaurus.config';\nimport globalData from '@generated/globalData';\nimport siteMetadata from '@generated/site-metadata';\nimport renderRoutes from './exports/renderRoutes';\nimport DocusaurusContext from './exports/context';\nimport PendingNavigation from './PendingNavigation';\nimport BaseUrlIssueBanner from './baseUrlIssueBanner/BaseUrlIssueBanner';\nimport './client-lifecycles-dispatcher';\nfunction App() {\n    const [isClient, setIsClient] = useState(false);\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n    return (React.createElement(DocusaurusContext.Provider, { value: { siteConfig, siteMetadata, globalData, isClient } },\n        React.createElement(BaseUrlIssueBanner, null),\n        React.createElement(PendingNavigation, { routes: routes }, renderRoutes(routes))));\n}\nexport default App;\n"]}]}